name: Deploy Worker

on:
  push:
    branches: [ main ]
    paths:
      - "worker/**"
      - ".github/workflows/worker-deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worker
    steps:
      - uses: actions/checkout@v4

      # 不强依赖本地安装 wrangler，直接用 npx wrangler@4
      - name: Prepare wrangler.ci.toml (inject D1/KV IDs)
        env:
          CF_D1_DB_ID: ${{ secrets.CF_D1_DB_ID }}
          CF_KV_ID: ${{ secrets.CF_KV_ID }}
        run: |
          cp wrangler.toml wrangler.ci.toml
          sed -i "s/REPLACE_WITH_YOUR_D1_ID/${CF_D1_DB_ID}/g" wrangler.ci.toml
          sed -i "s/REPLACE_WITH_YOUR_KV_ID/${CF_KV_ID}/g" wrangler.ci.toml
          echo "----- wrangler.ci.toml -----"
          cat wrangler.ci.toml

      - name: Migrate D1 schema
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
        run: npx wrangler@4 d1 execute new24 --file=schema.sql --remote --config wrangler.ci.toml

      - name: Deploy Worker
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
        run: npx wrangler@4 deploy --config wrangler.ci.toml
