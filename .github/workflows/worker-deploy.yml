name: Deploy Worker

on:
  push:
    branches: [ main ]
    paths:
      - "worker/**"
      - ".github/workflows/worker-deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worker
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install deps
        run: npm ci

      - name: Inject D1/KV IDs to wrangler.ci.toml
        env:
          CF_D1_DB_ID: ${{ secrets.CF_D1_DB_ID }}
          CF_KV_ID: ${{ secrets.CF_KV_ID }}
        run: |
          if [ -f wrangler.toml ]; then
            cp wrangler.toml wrangler.ci.toml
          else
            echo 'name = "twentyfour-worker"
main = "src/index.ts"
compatibility_date = "2025-09-01"
' > wrangler.ci.toml
          fi
          node -e "const fs=require('fs');let s=fs.readFileSync('wrangler.ci.toml','utf8');s=s.replace(/REPLACE_WITH_YOUR_D1_ID/g, process.env.CF_D1_DB_ID||'');s=s.replace(/REPLACE_WITH_YOUR_KV_ID/g, process.env.CF_KV_ID||'');fs.writeFileSync('wrangler.ci.toml',s);"

      - name: Migrate D1 schema
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
        run: npx wrangler d1 execute new24 --file=schema.sql --remote --config wrangler.ci.toml

      - name: Deploy Worker
        env:
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
        run: npx wrangler deploy --config wrangler.ci.toml
