name: Deploy Worker

on:
  push:
    branches: [ main ]
    paths:
      - "worker/**"
      - ".github/workflows/worker-deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: worker
    steps:
      - uses: actions/checkout@v4

      - name: Show wrangler.toml (debug)
        run: |
          echo "----- wrangler.toml -----"
          cat wrangler.toml

      - name: Prepare wrangler.ci.toml (copy only)
        run: |
          cp wrangler.toml wrangler.ci.toml
          echo "----- wrangler.ci.toml -----"
          cat wrangler.ci.toml
          echo "grep migrations:"
          grep -n "migrations" -n wrangler.ci.toml || true
          echo "grep new_sqlite_classes:"
          grep -n "new_sqlite_classes" wrangler.ci.toml || true
          echo "grep database_name:"
          grep -n 'database_name' wrangler.ci.toml || true

      - name: Wrangler whoami
        env:
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: npx wrangler@4 whoami

      - name: Migrate D1 schema
        env:
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: npx wrangler@4 d1 execute new24 --file=schema.sql --remote --config wrangler.ci.toml

      - name: Deploy Worker
        env:
          CLOUDFLARE_API_TOKEN:  ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: npx wrangler@4 deploy --config wrangler.ci.toml
